name: Generate RSS Feed

on:
  schedule:
    - cron: "10 1 * * *" # UTC 01:10 = JST 10:10
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install dependencies
        run: |
          sudo apt-get install -y jq

      - name: Fetch previous RSS file
        run: |
          if [ -f rss.xml ]; then
            cp rss.xml previous_rss.xml
          else
            echo "Previous RSS file not found. Creating an empty placeholder."
            touch previous_rss.xml
          fi

      - name: Fetch JSON and Convert to RSS
        run: |
          curl -sL "https://kosodate-green.mlit.go.jp/assets/data/news.json" -o news.json

          # デバッグ用に JSON の内容を表示
          echo "Fetched JSON Content:"
          cat news.json

          # RSS ヘッダー作成
          echo '<?xml version="1.0" encoding="UTF-8"?>' > rss.xml
          echo '<rss version="2.0"><channel>' >> rss.xml
          echo '<title>子育てグリーン住宅支援事業 新着情報</title>' >> rss.xml
          echo '<link>https://kosodate-green.mlit.go.jp/</link>' >> rss.xml
          echo '<description>最新のニュースを提供します</description>' >> rss.xml
          echo '<language>ja</language>' >> rss.xml

          # JSON から RSS アイテムを作成
          cat news.json | jq -c '.list[]' | while read -r item; do
            title=$(echo "$item" | jq -r '.title | @html')
            link=$(echo "$item" | jq -r '.url | @html')
            pubDate=$(echo "$item" | jq -r '.date' | sed 's/\//-/g' | xargs -I {} date --date="{}" -R)
            guid=$(echo "$item" | jq -r '.id')

            # URLが空の場合はスキップ（Feedly では必須）
            if [[ -z "$link" || "$link" == "null" ]]; then
              continue
            fi

            echo "<item>" >> rss.xml
            echo "  <title>${title}</title>" >> rss.xml
            echo "  <link>${link}</link>" >> rss.xml
            echo "  <guid isPermaLink=\"false\">${guid}</guid>" >> rss.xml
            echo "  <pubDate>${pubDate}</pubDate>" >> rss.xml
            echo "</item>" >> rss.xml
          done

          echo '</channel></rss>' >> rss.xml

      - name: Debug: Check if RSS file exists
        run: |
          ls -la
          if [ -f rss.xml ]; then
            echo "✅ rss.xml exists!"
          else
            echo "❌ rss.xml NOT FOUND!"
            exit 1
          fi

      - name: Ensure .nojekyll exists
        run: |
          touch .nojekyll
          git add .nojekyll

      - name: Commit and Push RSS
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          
          git add rss.xml .nojekyll
          git status  # 変更確認

          if git diff --cached --quiet; then
            echo "No changes in rss.xml. Skipping commit."
            exit 0
          fi

          git commit -m "Updated RSS feed"
          git push
